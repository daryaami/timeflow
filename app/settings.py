"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-$m05+oyc)=#6h)g_(3%q9^5tnm3rnnu-!)b!5h2y5e8$l1%v%v"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

from decouple import config

REDIRECT_URI = 'http://127.0.0.1:8000/google_callback'
# GOOGLE_CLIENT_ID = (config("GOOGLE_CLIENT_ID"))
GOOGLE_CLIENT_ID = (
    ("760635798221-km4u4ssajmptuu49e8t1p7pkriq96dl2.apps.googleusercontent.com"),
)
GOOGLE_CLIENT_SECRET = config("GOOGLE_CLIENT_SECRET")
AUTH_URI = "https://accounts.google.com/o/oauth2/v2/auth"
TOKEN_URI = "https://oauth2.googleapis.com/token"
USERINFO_ENDPOINT = 'https://www.googleapis.com/oauth2/v1/userinfo'
auth_provider_x509_cert_url = ("https://www.googleapis.com/oauth2/v1/certs",)

GOOGLE_CLIENT_SECRETS_FILE = "credentials.json"

SCOPES = ['openid', 'https://www.googleapis.com/auth/userinfo.profile', 'https://www.googleapis.com/auth/userinfo.email', 'https://www.googleapis.com/auth/calendar']


SITE_ID = 1

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.postgres",
    # "debug_toolbar",
    "main",
    "planner",
    "habits",
    "tasks",
    "google_auth",
    "users",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # "debug_toolbar.middleware.DebugToolbarMiddleware",
]

ROOT_URLCONF = "app.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "frontend/dist"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "app.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "timeflow",
        "USER": "timeflow",
        "PASSWORD": "timeflow",
        "HOST": "localhost",
        "PORT": "5434",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

# URL для доступа к статическим файлам
# Путь к вашей кастомной папке для статических файлов
STATICFILES_DIRS = [
    BASE_DIR / "frontend/dist/assets",
]

# Путь, куда будут собираться статические файлы (например, при выполнении collectstatic)
STATIC_ROOT = BASE_DIR / "staticfiles"

# URL, по которому будут доступны статические файлы
STATIC_URL = "/assets/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

SESSION_ENGINE = "django.contrib.sessions.backends.db"

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
AUTH_USER_MODEL = "users.CustomUser"


# CORS (Cross-Origin Resource Sharing): Настройка CORS в Django позволяет контролировать, какие домены могут делать запросы к вашему API. Вы можете настроить Django таким образом, чтобы он разрешал запросы с вашего домена Vue.js.
# CORS_ORIGIN_WHITELIST = [
#     'http://your-vue-app-domain.com',
#     'https://your-vue-app-domain.com',
# ]

# CORS_ALLOW_CREDENTIALS = True

LOGIN_URL = '/login/'
